{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { AUTH_LOGIN_SESSION_STORAGE_KEY } from '../config';\nimport { handleToken, setInitialAuthState } from './utils';\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: setInitialAuthState,\n  reducers: {\n    registration: (state, _ref) => {\n      let {\n        payload: token\n      } = _ref;\n      // saving the token action\n      handleToken(state, token);\n    },\n    login: (state, _ref2) => {\n      let {\n        payload: token\n      } = _ref2;\n      // saving the token action\n      handleToken(state, token);\n    },\n    logout: state => {\n      //remove token/user from session storage\n      state.token = null;\n      state.user = null;\n      sessionStorage.removeItem(AUTH_LOGIN_SESSION_STORAGE_KEY);\n    }\n  }\n});\n//export the action creators\nexport const {\n  registration,\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","AUTH_LOGIN_SESSION_STORAGE_KEY","handleToken","setInitialAuthState","authSlice","name","initialState","reducers","registration","state","_ref","payload","token","login","_ref2","logout","user","sessionStorage","removeItem","actions","reducer"],"sources":["/Users/timy1/Desktop/Resume/resume website/src/auth/authSlice.ts"],"sourcesContent":["import User from '../models/User';\nimport {createSlice,PayloadAction} from '@reduxjs/toolkit';\nimport { AUTH_LOGIN_SESSION_STORAGE_KEY } from '../config';\nimport { handleToken, setInitialAuthState } from './utils';\n\nexport interface AuthState{\n      user: User | null;\n      token: string | null;\n}\n\nexport const authSlice = createSlice({\n      name: 'auth',\n      initialState: setInitialAuthState,\n      reducers:{\n            registration: (state,{ payload: token }:PayloadAction<string>) => {\n                  // saving the token action\n                  handleToken(state,token);\n            },\n            login: (state, {payload: token}: PayloadAction<string>) => {\n                  // saving the token action\n                  handleToken(state,token);\n            },\n            logout: (state) => {\n                  //remove token/user from session storage\n                  state.token = null;\n                  state.user = null;\n                  sessionStorage.removeItem(AUTH_LOGIN_SESSION_STORAGE_KEY);\n            }\n      }\n})\n//export the action creators\nexport const {registration,login,logout} = authSlice.actions;\n\nexport default authSlice.reducer;\n\n"],"mappings":"AACA,SAAQA,WAAW,QAAqB,kBAAkB;AAC1D,SAASC,8BAA8B,QAAQ,WAAW;AAC1D,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,SAAS;AAO1D,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEH,mBAAmB;EACjCI,QAAQ,EAAC;IACHC,YAAY,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAA8C;MAAA,IAA7C;QAAEC,OAAO,EAAEC;MAA4B,CAAC,GAAAF,IAAA;MACvD;MACAR,WAAW,CAACO,KAAK,EAACG,KAAK,CAAC;IAC9B,CAAC;IACDC,KAAK,EAAEA,CAACJ,KAAK,EAAAK,KAAA,KAA8C;MAAA,IAA5C;QAACH,OAAO,EAAEC;MAA4B,CAAC,GAAAE,KAAA;MAChD;MACAZ,WAAW,CAACO,KAAK,EAACG,KAAK,CAAC;IAC9B,CAAC;IACDG,MAAM,EAAGN,KAAK,IAAK;MACb;MACAA,KAAK,CAACG,KAAK,GAAG,IAAI;MAClBH,KAAK,CAACO,IAAI,GAAG,IAAI;MACjBC,cAAc,CAACC,UAAU,CAACjB,8BAA8B,CAAC;IAC/D;EACN;AACN,CAAC,CAAC;AACF;AACA,OAAO,MAAM;EAACO,YAAY;EAACK,KAAK;EAACE;AAAM,CAAC,GAAGX,SAAS,CAACe,OAAO;AAE5D,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}