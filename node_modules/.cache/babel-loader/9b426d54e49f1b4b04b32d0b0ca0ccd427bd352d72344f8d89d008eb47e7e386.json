{"ast":null,"code":"import axios from \"axios\";\nexport const BASE_API_URL = 'http://localhost:3030/api/employees';\nexport const getEmployees = async () => {\n  //ajax\n  const response = await axios.get(BASE_API_URL);\n  const employees = response.data;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(employees);\n    }, 1000);\n  });\n};\nexport const getEmployee = async id => {\n  //ajax\n  const response = await axios.get(`${BASE_API_URL}/${id}`);\n  const employee = response.data;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(employee);\n    }, 1000);\n  });\n};\nexport const addEmployee = async employee => {\n  // AJAX request - send a new product to the server / recieving back the added product\n\n  const formData = new FormData(); // containing strings / files\n\n  formData.append('firstName', employee.firstName);\n  formData.append('lastName', employee.lastName);\n  formData.append('title', employee.title);\n  formData.append('city', employee.city);\n  formData.append('country', employee.country);\n  formData.append('birthDate', employee.birthDate);\n  formData.append('image', employee.imageName[0]); // image = FileList image[0] = File / Blob\n\n  const response = await axios.post(`${BASE_API_URL}/`, formData);\n  const addedEmployee = response.data;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(addedEmployee);\n    }, 1000);\n  });\n};\nexport const deleteEmployee = async id => {\n  await axios.delete(`${BASE_API_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n      reject(false);\n    }, 1000);\n  });\n};\nexport const updateEmployee = async employee => {\n  // AJAX request - send a new employee to the server / recieving back the updated employee\n\n  const formData = new FormData(); // containing strings / files\n\n  formData.append('firstName', employee.firstName);\n  formData.append('lastName', employee.lastName);\n  formData.append('title', employee.title);\n  formData.append('city', employee.city);\n  formData.append('country', employee.country);\n  formData.append('birthDate', employee.birthDate);\n  formData.append('image', employee.imageName[0]); // image = FileList image[0] = File / Blob\n\n  const response = await axios.put(`${BASE_API_URL}/${employee.firstName}`, formData);\n  const updatedEmployee = response.data;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(updatedEmployee);\n    }, 1000);\n  });\n};","map":{"version":3,"names":["axios","BASE_API_URL","getEmployees","response","get","employees","data","Promise","resolve","reject","setTimeout","getEmployee","id","employee","addEmployee","formData","FormData","append","firstName","lastName","title","city","country","birthDate","imageName","post","addedEmployee","deleteEmployee","delete","updateEmployee","put","updatedEmployee"],"sources":["/Users/timy1/Desktop/2.3.23 - ShoesStore/shoesStore/src/Utils/fetch.ts"],"sourcesContent":["import axios from \"axios\";\nimport Employee from \"../models/Employee\";\n\nexport const BASE_API_URL = 'http://localhost:3030/api/employees';\n\nexport const getEmployees = async (): Promise<Employee[]> => {\n      //ajax\n      const response = await axios.get<Employee[]>(BASE_API_URL);\n   \n      const employees = response.data;\n   \n      return new Promise((resolve,reject)=> {\n      setTimeout(() => {\n            resolve(employees);\n         }, 1000);\n         });   \n   }\n\n   export const getEmployee = async (id:number): Promise<Employee> => {\n      //ajax\n      const response = await axios.get<Employee>(`${BASE_API_URL}/${id}`);\n   \n      const employee = response.data;\n   \n      return new Promise((resolve,reject)=> {\n      setTimeout(() => {\n            resolve(employee);\n         }, 1000);\n         });   \n   }\n\n   export const addEmployee = async (employee:Employee):Promise<Employee> => {\n\n      // AJAX request - send a new product to the server / recieving back the added product\n   \n      const formData = new FormData(); // containing strings / files\n   \n      formData.append('firstName', employee.firstName);\n      formData.append('lastName', employee.lastName);\n      formData.append('title', employee.title);\n      formData.append('city', employee.city);\n      formData.append('country', employee.country);\n      formData.append('birthDate', employee.birthDate);\n      formData.append('image', employee.imageName[0]); // image = FileList image[0] = File / Blob\n      \n      const response = await axios.post(`${BASE_API_URL}/`,formData);\n      const addedEmployee = response.data;\n   \n      return new Promise((resolve,reject) => {\n         setTimeout(() => {\n           resolve(addedEmployee);\n         },1000)\n      });\n   }\n\n   export const deleteEmployee = async (id:number):Promise<boolean> => {\n\n      await axios.delete(`${BASE_API_URL}/${id}`);\n   \n      return new Promise((resolve,reject) => {\n         setTimeout(() => {\n           resolve(true);\n           reject(false);\n         },1000)\n      });\n   }\n\n   export const updateEmployee = async (employee:Employee) :Promise<Employee> => {\n\n      // AJAX request - send a new employee to the server / recieving back the updated employee\n   \n      const formData = new FormData(); // containing strings / files\n\n      formData.append('firstName', employee.firstName);\n      formData.append('lastName', employee.lastName);\n      formData.append('title', employee.title);\n      formData.append('city', employee.city);\n      formData.append('country', employee.country);\n      formData.append('birthDate', employee.birthDate);\n      formData.append('image', employee.imageName[0]); // image = FileList image[0] = File / Blob\n      \n      const response = await axios.put(`${BASE_API_URL}/${employee.firstName}`,formData);\n      const updatedEmployee = response.data;\n   \n      return new Promise((resolve,reject) => {\n         setTimeout(() => {\n           resolve(updatedEmployee);\n         },1000)\n      });\n   }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}